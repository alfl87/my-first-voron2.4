[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
	M109 S150
	CLEAN_NOZZLE
	M190 S{BED_TEMP}
    G28
    QUAD_GANTRY_LEVEL
    G28
	BED_MESH_CALIBRATE ADAPTIVE=1
	CLEAN_NOZZLE
    G1 Z10 F3000
	G28
	M104 S{EXTRUDER_TEMP}
	M109 S{EXTRUDER_TEMP}
    VORON_PURGE
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
	SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
	{% set BED_TEMP = params.BED_TEMP%}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP%}
	BED_MESH_CLEAR
	M140 S{BED_TEMP}
	M104 S150
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
	
[gcode_macro Herunterfahren]
gcode:
  {action_call_remote_method("shutdown_machine")}

[gcode_macro Neustarten]
gcode:
  {action_call_remote_method("reboot_machine")}
  
[gcode_macro Beleuchtung_AN]
gcode:
    SET_PIN PIN=caselight VALUE=1
	
[gcode_macro Beleuchtung_AUS]
gcode:
    SET_PIN PIN=caselight VALUE=0
	
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 310
variable_start_y: 350
variable_start_z: 1.5
variable_wipe_dist: -50
variable_wipe_qty: 6
variable_wipe_spd: 300
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %} 
 G90
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}
 G1 Z{raise_distance}
 

[gcode_macro Wartungsposition]
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
	G28
 {% endif %} 
    G90
    G1 X130 Y10 Z100 F10000
    G91
    M140 S0
    M104 S0
    M106 S0
    M84
	SET_PIN PIN=caselight VALUE=1